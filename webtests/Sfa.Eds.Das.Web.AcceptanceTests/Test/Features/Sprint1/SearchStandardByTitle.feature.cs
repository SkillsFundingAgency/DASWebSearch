// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Sfa.Eds.Das.Web.AcceptanceTests.Test.Features.Sprint1
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("Search standards by title", Description="In order to choose an apprenticeship\r\nAs an employer \r\nI want to be able to Searc" +
        "h by title", SourceFile="Test\\Features\\Sprint1\\SearchStandardByTitle.feature", SourceLine=0)]
    public partial class SearchStandardsByTitleFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "SearchStandardByTitle.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Search standards by title", "In order to choose an apprenticeship\r\nAs an employer \r\nI want to be able to Searc" +
                    "h by title", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void SearchByTitle1(string title, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "smoke"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Search By title1", @__tags);
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("I am on Search landing page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
 testRunner.And(string.Format("I enter keyword \'{0}\' in search box", title), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
 testRunner.When("I click on search button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 11
 testRunner.Then(string.Format("I should see matching \'{0}\' standards on result page", title), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Search By title1, Actuarial Technician", new string[] {
                "smoke"}, SourceLine=13)]
        public virtual void SearchByTitle1_ActuarialTechnician()
        {
            this.SearchByTitle1("Actuarial Technician", ((string[])(null)));
        }
        
        public virtual void SearchByTitle(string title, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "regression"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Search By title", @__tags);
#line 17
this.ScenarioSetup(scenarioInfo);
#line 18
 testRunner.Given("I am on Search landing page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 19
 testRunner.And(string.Format("I enter keyword \'{0}\' in search box", title), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
 testRunner.When("I click on search button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 21
 testRunner.Then(string.Format("I should see matching \'{0}\' standards on result page", title), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Search By title, Actuarial Technician", new string[] {
                "regression"}, SourceLine=23)]
        public virtual void SearchByTitle_ActuarialTechnician()
        {
            this.SearchByTitle("Actuarial Technician", ((string[])(null)));
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Search By title, Financial Adviser", new string[] {
                "regression"}, SourceLine=24)]
        public virtual void SearchByTitle_FinancialAdviser()
        {
            this.SearchByTitle("Financial Adviser", ((string[])(null)));
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Search By title, software engineer", new string[] {
                "regression"}, SourceLine=25)]
        public virtual void SearchByTitle_SoftwareEngineer()
        {
            this.SearchByTitle("software engineer", ((string[])(null)));
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Search By title, car mechanic", new string[] {
                "regression"}, SourceLine=26)]
        public virtual void SearchByTitle_CarMechanic()
        {
            this.SearchByTitle("car mechanic", ((string[])(null)));
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Search By title, manufacturing engineer", new string[] {
                "regression"}, SourceLine=27)]
        public virtual void SearchByTitle_ManufacturingEngineer()
        {
            this.SearchByTitle("manufacturing engineer", ((string[])(null)));
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Search By title, Manager", new string[] {
                "regression"}, SourceLine=28)]
        public virtual void SearchByTitle_Manager()
        {
            this.SearchByTitle("Manager", ((string[])(null)));
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Search By title, Legal Services", new string[] {
                "regression"}, SourceLine=29)]
        public virtual void SearchByTitle_LegalServices()
        {
            this.SearchByTitle("Legal Services", ((string[])(null)));
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Search By title, Designer", new string[] {
                "regression"}, SourceLine=30)]
        public virtual void SearchByTitle_Designer()
        {
            this.SearchByTitle("Designer", ((string[])(null)));
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Search By title, Dental nurse", new string[] {
                "regression"}, SourceLine=31)]
        public virtual void SearchByTitle_DentalNurse()
        {
            this.SearchByTitle("Dental nurse", ((string[])(null)));
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Search By title, Electrician", new string[] {
                "regression"}, SourceLine=32)]
        public virtual void SearchByTitle_Electrician()
        {
            this.SearchByTitle("Electrician", ((string[])(null)));
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Standards searched to display level informaiton", SourceLine=35)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StandardsSearchedToDisplayLevelInformaiton()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Standards searched to display level informaiton", new string[] {
                        "ignore"});
#line 36
this.ScenarioSetup(scenarioInfo);
#line 37
testRunner.Given("I am on Search landing page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 38
testRunner.And("I enter keyword \'{p0}\' in search box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 39
testRunner.When("I click on search button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 40
testRunner.Then("I should see level information againts again standards found", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
