@using Sfa.Das.Sas.Core.Extensions
@model Sfa.Das.Sas.Core.Models.FrameworkMetaData

@{
    ViewBag.Title = "Edit " + Model.FrameworkName  + ": " + Model.Pathway;
}

<h2>Edit @Model.FrameworkName: @Model.Pathway</h2>
<span>
    <a class="btn" href="@Url.Action("FrameworkDetails", new { Model.Id })">
        View framework
        <i class="fa fa-eye" aria-hidden="true"></i>
    </a>
</span>

<div class="edit edit-framework">
    <form action="@Url.Action("UpdateFramework")" method="post">

        <input type="hidden" name="id" value="@Model.Id"/>

        <div class="edit-header">
            <h3>@Model.FrameworkName: @Model.Pathway</h3>
            <input type="submit" class="btn btn-primary btn-lg" value="Update" />
        </div>

        <div class="boxed">
            <div>
                <label id="apprenticeshipId">ApprenticeshipId</label>
                <span class="right">
                    @Model.ApprenticeshipId.ToString()
                </span>
            </div>
            <div>
                <label>EffectiveFrom</label>
                <input type="text" name="effectivefrom" class="datepicker from right" value="@Model.EffectiveFrom.ToString("yyyy-MM-dd")"/>
            </div>
            <div>
                <label>EffectiveTo</label>
                <input type="text" name="effectiveto" class="datepicker to right" value="@Model.EffectiveTo.ToString("yyyy-MM-dd")"/>
            </div>
        </div>

        <div class="boxed entrybox" id="keyword-property">
            <label>Keywords</label>
                <div class="right">
                    <input type="text" placeholder="add new keyword" />
                    <div class="property-container right" data-json="@Model.Keywords.WhereSafe(m => !string.IsNullOrEmpty(m)).ToJson()" data-name="keywords">
                    </div>
                </div>
            </div>

        <div class="boxed" id="jobroles-property">
            <label>Job Roles</label>
            <input type="text" id="jobroles-title" placeholder="title"/>
            <input type="text" id="jobroles-description" placeholder="description"/>
            <div class="property-container" id="jobrole-container" data-json="@Model.JobRoleItems.ToJson()">
            </div>
        </div>

        <div>
            <label>Framework Overview</label>
            <div class="right">
                <textarea class="htmledit" name="frameworkoverview">
                    @Html.Raw(@Model.FrameworkOverview)
                </textarea>
            </div>
        </div>
        <div>
            <label>Entry Requirements</label>
            <div class="right">
                <textarea class="htmledit" name="entryrequirements">
                    @Html.Raw(Model.EntryRequirements)
                </textarea>
            </div>
        </div>
        <div>
            <label>Professional Registration</label>
            <div class="right">
                <textarea class="htmledit" name="professionalregistration">
                    @Html.Raw(Model.ProfessionalRegistration)
                </textarea>
            </div>
        </div>
        <div>
            <label>Completion Qualifications</label>
            <div class="right">
                <textarea class="htmledit" name="completionqualifications">
                    @Html.Raw(@Model.CompletionQualifications)
                </textarea>
            </div>
        </div>

        <div class="boxed entrybox" id="competencyqualification-property">
            <label>Competency Qualification</label>
            <div class="right">
                <input type="text" placeholder="add new competency qualification"/>
                <div class="property-container" data-json="@Model.CompetencyQualification.WhereSafe(x => x != string.Empty).ToJson()" data-name="CompetencyQualification">
                </div>
            </div>
        </div>

        <div class="boxed entrybox" id="knowledgequalification-property">
            <label>Knowledge Qualification</label>
            <div class="right">
                <input type="text"  placeholder="add new knowledge qualification"/>
                <div class="property-container" data-json="@Model.KnowledgeQualification.WhereSafe(x => x != string.Empty).ToJson()" data-name="KnowledgeQualification">
                </div>
            </div>
        </div>

        <div class="boxed entrybox" id="combinedqualification-property">
            <label>Combined Qualification</label>
            <div class="right list">
                <input type="text" placeholder="add new combined qualification"/>
                <div class="property-container" data-json="@Model.CombinedQualification.WhereSafe(x => x != string.Empty).ToJson()" data-name="CombinedQualification">
                </div>
            </div>
        </div>
    </form>

</div>

@helper GetFrameworkProperty(string title, string id, string item, bool hideIfEmpty = false)
{
    if (!string.IsNullOrEmpty(item) || !hideIfEmpty)
    {
            <dt>@title</dt>
            <dd id="@id">
                @(!string.IsNullOrEmpty(item) ? Html.MarkdownToHtml(item) : Html.MarkdownToHtml("none"))
            </dd>
    }
}

@{
    Html.RenderPartial("Templates/_UpdateTemplates");
}