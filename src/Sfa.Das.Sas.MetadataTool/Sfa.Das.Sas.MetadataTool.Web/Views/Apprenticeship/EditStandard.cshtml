@using Sfa.Das.Sas.Core.Extensions
@model Sfa.Das.Sas.Core.Models.StandardMetaData

@{
    ViewBag.Title = "Edit " + Model.Title;
}

<h2>Edit @Model.Title </h2>
<span>
    <a href="@Url.Action("StandardDetails", new { Model.Id })">
        View standard
        <i class="fa fa-eye" aria-hidden="true"></i>
    </a>
</span>
<div class="edit edit-standard">
    <form action="/Apprenticeship/UpdateStandard" method="post">
        <input type="hidden" name="id" value="@Model.Id"/>

        <div class="edit-header">
            <h3>@Model.Title</h3>
            <input type="submit" class="btn btn-primary btn-lg" value="Update" />
        </div>

        <input type="hidden" name="apprenticeshipId" value="@Model.ApprenticeshipId" />
        <div class="boxed">
            @GetFrameworkProperty("ApprenticeshipId", "apprenticeshipId", Model.ApprenticeshipId.ToString())
            <div>
                <label>Title</label>
                <input type="text" name="title" value="@Model.Title"/>
            </div>
        </div>

        <div class="boxed">
            <label>Typical length</label>
            <div>
                <label>From</label>
                <input type="text" name="typicalLength.From" value="@Model.TypicalLength.From"/>
            </div>
            <div>
                <label>To</label>
                <input type="text" name="typicalLength.To" value="@Model.TypicalLength.To"/>
            </div>
            <div>
                <label>Unit</label>
                <input type="text" name="typicalLength.Unit" value="@Model.TypicalLength.Unit"/>
            </div>
        </div>

        <div class="boxed entrybox" id="keyword-property">
            <label>Keywords</label>
            <input type="text" placeholder="add new keyword" />
            <div class="property-container" data-json="@Model.Keywords.WhereSafe(m => !string.IsNullOrEmpty(m)).ToJson()" data-name="keywords">
            </div>
        </div>


        <div class="boxed entrybox" id="jobrole-property">
            <label>Job Roles</label>
            <input type="text" placeholder="add new job role"/>
            <div class="property-container" data-json="@Model.JobRoles.WhereSafe(m => !string.IsNullOrEmpty(m)).ToJson()" data-name="jobroles">
            </div>
        </div>
        
        <div>
            <label>Notional end level</label>
            <input type="number" name="notionalEndLevel" placeholder="notionalEndLevel" value="@Model.NotionalEndLevel" />
        </div>

        <div>
            <label>Standard Pdf Url</label>
            <textarea class="htmledit" name="standardPdfUrl">
                @Html.Raw(@Model.StandardPdfUrl)
            </textarea>
        </div>

        <div>
            <label>Assessment Plan Pdf Url</label>
            <textarea class="htmledit" name="assessmentPlanPdfUrl">
                @Html.Raw(@Model.AssessmentPlanPdfUrl)
            </textarea>
        </div>

        <div>
            <label>EntryRequirements</label>
            <textarea class="htmledit" name="entryrequirements">
                @Html.Raw(@Model.EntryRequirements)
            </textarea>
        </div>
        <div>
            <label>ProfessionalRegistration</label>
            <textarea class="htmledit" name="professionalregistration">
                @Html.Raw(@Model.ProfessionalRegistration)
            </textarea>
        </div>
        <div>
            <label>WhatApprenticesWillLearn</label>
            <textarea class="htmledit" name="whatApprenticesWillLearn">
                @Html.Raw(@Model.WhatApprenticesWillLearn)
            </textarea>
        </div>
        <div>
            <label>Qualifications</label>
            <textarea class="htmledit" name="qualifications">
                @Html.Raw(@Model.Qualifications)
            </textarea>
        </div>
        <div>
            <label>OverviewOfRole</label>
            <textarea class="htmledit" name="overviewOfRole">
                @Html.Raw(@Model.OverviewOfRole)
            </textarea>
        </div>
        <div>
            <label>SectorSubjectAreaTier1</label>
            <input type="number" name="sectorSubjectAreaTier1" placeholder="sectorSubjectAreaTier1" value="@Model.SectorSubjectAreaTier1">
        </div>
        <div>
            <label>SectorSubjectAreaTier2</label>
            <input type="number" name="sectorSubjectAreaTier2" placeholder="sectorSubjectAreaTier2" value="@Model.SectorSubjectAreaTier2"/>
        </div>
    </form>
</div>

@helper GetFrameworkProperty(string title, string id, string item, bool hideIfEmpty = false)
{
    if (!string.IsNullOrEmpty(item) || !hideIfEmpty)
    {
        <dt>@title</dt>
            <dd id="@id">
                @(!string.IsNullOrEmpty(item) ? Html.MarkdownToHtml(item) : Html.MarkdownToHtml("none"))
            </dd>
    }
}

@{
    Html.RenderPartial("Templates/_UpdateTemplates");
}