@using Sfa.Das.Sas.Web.ViewModels
@model ProviderStandardSearchResultViewModel

    @foreach (var item in Model.Hits)
    {
        <article class="result">
            <header>
                <h2 class="result-title">
                    @Html.ActionLink(item.Name, "Detail", "Provider", new { @providerId = item.UkPrn, @locationId = item.LocationId, @standardCode = item.StandardCode }, null)
                </h2>
            </header>

            <dl class="result-data-list">
                @RenderProviderDetails(item)

                <dt>Employer satisfaction:</dt>
                <dd class="employer-satisfaction">
                    @item.EmployerSatisfactionMessage
                </dd>
                <dt>Learner satisfaction:</dt>
                <dd class="learner-satisfaction">
                    @item.LearnerSatisfactionMessage
                </dd>
            </dl>

            <div class="shortlist-link">
               @GetShortlistLink(item.Id, item.StandardCode, item.LocationId, item.IsShortlisted)
            </div>
        </article>
    }

@helper  RenderProviderDetails(ProviderResultItemViewModel item)
{
    <dt>Distance:</dt>
    <dd class="distance">@item.Distance miles away</dd>

    if (item.DeliveryModes != null && item.DeliveryModes.Contains("100PercentEmployer") && item.DeliveryModes.Count == 1)
    {
        <dd class="address">
            Training takes place at your location.
        </dd>
    }
    else
    {
        <dd class="address">@item.LocationName @item.Address.Address1 @item.Address.Address2 @item.Address.Town @item.Address.County @item.Address.Postcode</dd>
    }
}

@helper GetShortlistLink(string providerId, int apprenticeshipId, int locationId, bool isShortlisted)
{
    providerId = providerId.Split(new[] { "-" }, StringSplitOptions.RemoveEmptyEntries)[0];

    if (isShortlisted)
    {
            @Html.ActionLink("Remove", "RemoveStandardProvider", "ShortList",
                new { apprenticeshipId, providerId, locationId },
                new
                {
                    @class = "link shortlist-link provider-search-shortlist-link",
                    rel = "nofollow",
                    data_apprenticeship = apprenticeshipId,
                    data_provider = providerId,
                    data_location = locationId,
                    data_action = "remove",
                    data_apprenticeship_type = "Standard"
                })
    }
    else
    {
            @Html.ActionLink("Shortlist", "AddStandardProvider", "ShortList",
                new { apprenticeshipId, providerId, locationId },
                new
                {
                    @class = "link shortlist-link provider-search-shortlist-link",
                    rel = "nofollow",
                    data_apprenticeship = apprenticeshipId,
                    data_provider = providerId,
                    data_location = locationId,
                    data_action = "add",
                    data_apprenticeship_type = "Standard"
                })
    }
}
