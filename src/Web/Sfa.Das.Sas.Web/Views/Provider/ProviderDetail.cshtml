@using Sfa.Das.Sas.Web.Extensions
@using Sfa.Das.Sas.Web.ViewModels
@model ProviderDetailViewModel

@{
    ViewBag.PageID = "provider-detail-view";
    ViewBag.Title = "Provider Details for " + Model.ProviderName;
    ViewBag.Description = "";
    Model.ApprenticeshipTrainingSummary.PaginationDetails.Page = 3;
}

<main id="content" class="provider-detail">
    <div class="grid-row">
        <div class="column-two-thirds">
            <h1 class="heading-xlarge" id="provider-name">
                @Model.ProviderName 
                @if (@Model.NationalProvider)
                {
                    <span class="tag-national"><span class="font-adjust">National</span></span>
                }
            </h1>
        </div>
    </div>
    <div class="grid-row">
        <div class="column-two-thirds">
            <dl class="data-list--provider data-list--compact">
                @if (!string.IsNullOrEmpty(Model.TradingNames))
        {
            <dt>Trading names:</dt>
            <dd id="trading-names">@Model.TradingNames</dd>
}
                <dt>UKPRN:</dt>
                <dd>@Model.UkPrn</dd>
            </dl>
            @{
        if (Model.IsLevyPayerOnly)
        {
            <p id="levy-payer-only" class="detail-highlight">
                Only levy paying employers can work with this provider
            </p>
}
if (Model.HasParentCompanyGuarantee)
{
        <p id="parent-company-guarantee" class="detail-highlight">
            Provider is supported by a parent company guarantee
        </p>
}

if (Model.IsNew)
{
        <p id="is-new-provider" class="detail-highlight">
            New organisation with no financial track record
        </p>
}
            }

            @if (!Model.HasMoreThanOneTradingName)
    {
        <p id="about-this-provider" class="markdown-header-text">About this Provider</p>
if (string.IsNullOrEmpty(Model.MarketingInfo))
{
        <span>There is no marketing information available about this provider.</span>
}
else
{
        @Html.MarkdownToHtml(Model.MarketingInfo)
}
}
    @if (Model.ApprenticeshipTrainingSummary?.PaginationDetails != null && Model.ApprenticeshipTrainingSummary.PaginationDetails.TotalCount > 0)
    {
        <div id="search-app-offered">
            <h2 class="heading-medium app-offered">
                @Model.ApprenticeshipTrainingSummary.PaginationDetails.TotalCount Apprenticeships offered
            </h2>
        </div>
        <table class="app-details">
            <thead>
                <tr>
                    <th>Apprenticeship</th>
                    <th>Type</th>
                    <th>Level</th>
                    <th><span class="visibility-hidden">View details</span></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.ApprenticeshipTrainingSummary.ApprenticeshipTrainingItems)
        {
            <tr>
                <td>@item.Name</td>
                <td>@item.Type</td>
                <td>@item.Level</td>
                <td><a href="/Apprenticeship/@item.Type/@item.Identifier">Details</a></td>
            </tr>
}
            </tbody>
        </table>
}
        @*<div class="page-navigation">
        <a class="previous" href="#">
            <i class="arrow-button fa fa-angle-left"></i>
            <span class="description">Previous <span class="hide-mob">page</span></span>
            <span class="counter">Page <span class="prevPage">1</span> of <span class="totalPage">10</span></span>
        </a>
        <a class="next" href="#">
            <i class="arrow-button fa fa-angle-right"></i>
            <span class="description">Next <span class="hide-mob">page</span></span>
            <span class="counter">Page <span class="nextPage">3</span> of <span class="totalPage">10</span></span>
        </a>
    </div>*@

            <nav role="navigation">
                <ul class="previous-next-navigation">
                 @if (Model.ApprenticeshipTrainingSummary.PaginationDetails.Page > 1)
                 {
                     var pageBefore = Model.ApprenticeshipTrainingSummary.PaginationDetails.Page - 1;

                     <li class="previous">
                         <a href="/provider/@Model.UkPrn/page/@pageBefore">
                             Previous <span class="visuallyhidden">page</span>
                             <span class="page-numbers">Previous page @pageBefore of @Model.ApprenticeshipTrainingSummary.PaginationDetails.LastPage</span>
                         </a>
                     </li>
                 }
                @if (Model.ApprenticeshipTrainingSummary.PaginationDetails.Page < Model.ApprenticeshipTrainingSummary.PaginationDetails.LastPage)
                {
                    var pageAfter = Model.ApprenticeshipTrainingSummary.PaginationDetails.Page + 1;

                    <li class="next">
                        <a href="/provider/@Model.UkPrn/page/@pageAfter">
                            Next <span class="visuallyhidden">page</span>
                            <span class="page-numbers">Next page @pageAfter of @Model.ApprenticeshipTrainingSummary.PaginationDetails.LastPage</span>
                        </a>
                    </li>
                }
                </ul>
            </nav>


        </div>

        <div class="column-one-third">
            <div class="panel--contact">
                <h2 class="heading-medium">Contact details</h2>
                <dl>
                     @{var linkProtocol = Model.Website.StartsWith("http") ? string.Empty : "http://";}
                    <dt class="apprenticeshipContactTitle">Website:</dt>
                    <dd>
                        <a href="@linkProtocol@Model.Website" rel="external" target="_blank" class="course-link apprenticeshipContact">
                            @Html.Raw(Model.ProviderName + " website")
                        </a>
                    </dd>

                    @{
                    if (!string.IsNullOrEmpty(Model.Phone))
                        {
                        <dt class="phone-title">Phone number:</dt>
                        <dd id="phone" class="phone">@Html.Raw(Model.Phone)</dd>
                        }
                    }
                    @{
                    if (!string.IsNullOrEmpty(Model.Email))
                        {
                            <dt class="email-title">Email:</dt>
                            <dd id="email" class="email"><a href="mailto:@Html.Raw(Model.Email)">@Html.Raw(Model.Email)</a></dd>
                        }
                    }

                </dl>
            </div>
            <div class="panel--contact panel--satisfaction">
                <dl>
                    <dt>Employer satisfaction:</dt>
                    <dd>
                        <div class="rating rating--inline">
                            <span id="employer-satisfaction" class="rating-@Model.EmployerSatisfaction">
                                @Model.EmployerSatisfactionMessage
                            </span>
                            @CreateProgressBar(Model.EmployerSatisfactionMessage, (int)Model.EmployerSatisfaction)
                        </div>
                    </dd>
                    <dt>Learner satisfaction:</dt>
                    <dd>
                        <div class="rating rating--inline">
                            <span id="learner-satisfaction" class="rating-@Model.LearnerSatisfaction">
                                @Model.LearnerSatisfactionMessage
                            </span>
                            @CreateProgressBar(Model.LearnerSatisfactionMessage, (int)Model.LearnerSatisfaction)
                        </div>
                        @if (!(Model.EmployerSatisfactionMessage == "no data available" && Model.LearnerSatisfactionMessage == "no data available"))
                        {
                            <span class="satisfaction-source font-small">
                                Source: <a href="https://www.gov.uk/government/statistical-data-sets/fe-choices-performance-indicators" target="_blank">Skills Funding Agency FE Choices</a>
                            </span>
                        }
                    </dd>
                </dl>
            </div>
            <div class="panel-disclaimer">
                <h4>Content disclaimer</h4>
                <p>
                    Education and Skills Funding Agency cannot guarantee the accuracy of course information on this site and makes 
                    no representations about the quality of any courses which appear on the site. Education and Skills Funding Agency 
                    is not liable for any losses suffered as a result of any party relying on the course information 
                    provided.
                </p>
            </div>
            <div id="expand-collapse">
               <details>
                    <summary>Explain levels</summary>
                    <div class="panel panel-border-narrow">
                        <p>Apprenticeships are set at different levels of difficulty from the equivalent of GCSE (level 2) up to postgraduate (level 7)</p>
                        <p><a href="https://www.gov.uk/what-different-qualification-levels-mean/overview" target="_blank" rel="external">More about levels</a></p>
                    </div>
                </details>
            </div>
        </div>       
    </div>
</main>
     

@helper CreateProgressBar(string message, int progress)
{
if (progress > 0)
{
        <div class="progress-container">
            <div class="progressbar" style="width: @progress%"></div>
        </div>
}
}