@using Sfa.Das.Sas.ApplicationServices.FeatureToggles
@using FeatureToggle.Core.Fluent
@using Sfa.Das.Sas.Web.ViewModels
@model Sfa.Das.Sas.Web.ViewModels.ProviderFrameworkSearchResultViewModel

    @foreach (var item in Model.Hits)
    {
        <article class="result">
            <header>
                <h2 class="result-title">
                    @Html.ActionLink(item.ProviderName, "Detail", "Provider", new { @providerId = item.UkPrn, @locationId = item.LocationId, @frameworkId = item.FrameworkId }, null)
                </h2>
            </header>

            <dl class="result-data-list">
                <dt>Distance:</dt>
                <dd class="distance">@item.Distance miles away</dd>
                @if (item.DeliveryModes != null && (item.DeliveryModes.Contains("BlockRelease") || item.DeliveryModes.Contains("DayRelease")))
                {
                    if (@item.Address != null)
                     {
                        <dd class="address">@item.LocationName @item.Address.Address1 @item.Address.Address2 @item.Address.Town @item.Address.County @item.Address.Postcode</dd>
                     }
                }

                @RenderDeliveryOptions(item)

                <dt>Employer satisfaction:</dt>
                <dd class="employer-satisfaction">
                    @item.EmployerSatisfactionMessage
                </dd>
                <dt>Learner satisfaction:</dt>
                <dd class="learner-satisfaction">
                    @item.LearnerSatisfactionMessage
                </dd>
            </dl>
            <div class="shortlist-link">
                @GetShortlistLink(item.Id, int.Parse(item.FrameworkId), item.LocationId, item.IsShortlisted)
            </div>
        </article>
    }

@helper RenderDeliveryOptions(FrameworkProviderResultItemViewModel item)
{
    <dt>Training options:</dt>

    <dd class="deliveryOptions">@item.DeliveryOptionsMessage</dd>
}

@helper GetShortlistLink(string providerId, int apprenticeshipId, int locationId, bool isShortlisted)
{
    if (Is<ShortlistingFeature>.Enabled)
    {
        providerId = providerId.Split(new[] { "-" }, StringSplitOptions.RemoveEmptyEntries)[0];

        if (isShortlisted)
        {
                @Html.ActionLink("Remove", "RemoveFrameworkProvider", "ShortList",
                    new { apprenticeshipId, providerId, locationId },
                    new
                    {
                        @class = "link shortlist-link provider-search-shortlist-link",
                        rel = "nofollow",
                        data_apprenticeship = apprenticeshipId,
                        data_provider = providerId,
                        data_location = locationId,
                        data_action = "remove",
                        data_apprenticeship_type = "Framework"
                    })
        }
        else
        {
                @Html.ActionLink("Shortlist", "AddFrameworkProvider", "ShortList",
                    new { apprenticeshipId, providerId, locationId },
                    new
                    {
                        @class = "link shortlist-link provider-search-shortlist-link",
                        rel = "nofollow",
                        data_apprenticeship = apprenticeshipId,
                        data_provider = providerId,
                        data_location = locationId,
                        data_action = "add",
                        data_apprenticeship_type = "Framework"
                    })
        }
    }
}