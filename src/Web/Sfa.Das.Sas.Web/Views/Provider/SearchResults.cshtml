@using Sfa.Das.Sas.Web.ViewModels
@using Sfa.Das.Sas.Web.Extensions
@using Sfa.Das.Sas.Web.Helpers
@model ProviderSearchNameResultViewModel

@{
    ViewBag.Title = "Search Results";
    ViewBag.PageId = "provider-search";
}
<main id="content" role="main">
    <input type="hidden" value="@Model.SearchTerm" id="ga-search-term"/>
    <input type="hidden" value="@Model.Results.IsNullOrEmpty().ToString()" id="ga-no-result" />
    
    <div class="grid-row">
        <div class="column-full">
            <hgroup class="hgroup">
                @{
                    if (Model != null && Model.ShortSearchTerm)
                    {
                        <div>
                            <span>Errors to fix</span>
                            <span class="error-message">Type at least 3 characters</span>
                        </div>
                    }

                }
                <h1 class="heading-xlarge">
                    Find a training provider by name
                </h1>

            </hgroup>

            @if (Model.TotalResults == 0)
            {
                     Html.RenderPartial("_SearchProviderName");
            }
        </div>
    </div>
    
    <div class="grid-row">
        @if (Model.TotalResults > 0)
        {
                 Html.RenderPartial("_SearchProviderName");
        }
    </div>
    <div class="grid-row">
        @if (!Model.HasError && !Model.ShortSearchTerm &&  Model.TotalResults > 0)
        {
            <div id="apprenticeship-results" class="column-two-thirds">
                
                <span class="form-hint"> @Model.TotalResults results found</span>

                @foreach (var item in Model.Results)
                {
                    <article class="result">
                        <dl class="result-data-list">
                            @GetProviderDetailItem(item.ProviderName, item.Aliases, item.UkPrn.ToString())
                        </dl>
                    </article>
                }
               
            </div>
        }
        else
        {
            Html.RenderPartial("_SearchResultMessage");
        }

    </div>
    <div>
        <nav role="navigation">
            <ul class="previous-next-navigation">
                @if (Model.ActualPage > 1)
                {
                    var pageBefore = Model.ActualPage - 1;

                    <li class="previous" id="previous-nav">
                        <a href="../provider/searchResults?SearchTerm=@Model.SearchTerm&Page=@pageBefore">
                            Previous <span class="visuallyhidden">page</span>
                            <span class="page-numbers">Previous page @pageBefore of @Model.LastPage</span>
                        </a>
                    </li>
                }
                @if (Model.ActualPage < Model.LastPage)
                {
                    var pageAfter = Model.ActualPage + 1;

                    <li class="next" id="next-nav">
                        <a href="../provider/searchResults?SearchTerm=@Model.SearchTerm&Page=@pageAfter">
                            Next <span class="visuallyhidden">page</span>
                            <span class="page-numbers">Next page @pageAfter of @Model.LastPage</span>
                        </a>
                    </li>
                }
            </ul>
        </nav>
    </div>
</main>




@helper GetProviderDetailItem(string title, List<string> aliases, string ukprn)
{
    <dt><b><a href="../Provider/@ukprn">@title</a></b></dt>
        if (aliases != null && aliases.Count > 0)
        {
 
            foreach (var alias in aliases)
            {
                <dt>
                    ...<a href="../Provider/@ukprn">@alias</a>
                </dt>
            }
        }

}
