@using Sfa.Das.Sas.Web.Extensions
@model Sfa.Das.Sas.Web.ViewModels.ProviderStandardSearchResultViewModel

<div>
    @if (Model.HasError)
    {
        <p>
            There was a problem performing a search. Try again later.
        </p>
    }
    else if(Model.TotalResults > 0 && Model.ShowAll)
    {
        @RenderAllMessage()
    }
    else if (Model.TotalResults > 0)
    {
        @RenderMessage()
    }


    @if (Model.TotalResults > 0 & Model.NationalProviders != null && Model.NationalProviders.Count > 0)
    {
        <p>
            Results labelled <span class="tag tag-national">National</span> are training options run by providers who are willing to offer training across England.
        </p>
    }

</div>

@helper  RenderMessage()
{
    <p class="small-btm-margin">
        @if (Model.TotalResults > 1)
        {
            <text>There are <b>@Model.TotalResults</b> training options for the <b>@Model.StandardName, level @Model.StandardLevel</b> apprenticeship.</text>
        }
        else
        {
            <text>There is <b>1</b> training option for the <b>@Model.StandardName, level @Model.StandardLevel</b> apprenticeship.</text>
        }
    </p>
    <p>
        Results are ordered by distance from '<b>@Model.PostCode.FormatPostcode()</b>'.
    </p>
}

@helper  RenderAllMessage()
{
    <p class="small-btm-margin">
        @if (Model.TotalResults > 1)
        {
            <text>There are <b>@Model.TotalResults</b> training options for the <b>@Model.StandardName, level @Model.StandardLevel</b> apprenticeship in England.</text>
        }
        else
        {
            <text>There is <b>1</b> training option for the <b>@Model.StandardName, level @Model.StandardLevel</b> apprenticeship in England.</text>
        }
    </p>
    <p class="small-btm-margin">
        Results are ordered by distance from '<b>@Model.PostCode.FormatPostcode()</b>'.
    </p>
}
