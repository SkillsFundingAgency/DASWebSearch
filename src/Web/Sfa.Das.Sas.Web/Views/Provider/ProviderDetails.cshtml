@using Sfa.Das.Sas.Web.Extensions
@using Sfa.Das.Sas.Web.ViewModels
@model ProviderDetailsViewModel

@{
    ViewBag.Title = "Provider Details";
    ViewBag.Description = "";
}
<main id="content" class="provider-detail">
    <div class="grid-row">
        <div class="column-two-thirds">
            <h1 class="heading-xlarge" id="provider-name">
                @Model.ProviderName 
                @if (@Model.NationalProvider)
                {
                    <span class="tag tag-national">National</span>
                }
            </h1>
        </div>
    </div>
    <div class="grid-row">
        <div class="column-one-third pull-right">
            <div class="panel--contact">
                <h2 class="heading-medium">Contact details</h2>
                <dl>
                    @GetStandardPropertyAsLinkHtml("Website:", "course-link", "apprenticeshipContactTitle", "apprenticeshipContact", Model.Website, Model.ProviderName + " website")
                    @GetStandardPropertyHtml("Phone number:", "phone", Model.Phone)
                    @GetEmailPropertyHtml("Email:", "email", Model.Email)
                </dl>
            </div>
        </div>
    </div>
</main>


<div class="grid-row">
<div class="column-two-thirds">
<h1>
    @Model.ProviderName
</h1>
National: @Model.NationalProvider<br/>

Trading Names: @Model.TradingNames<br/>
UKPRN: @Model.Ukprn<br/>

<h1 class="heading-xlarge">
    @Model.ProviderName
</h1>
Website: @Model.Website<br/>
Phone: @Model.Phone<br/>
Email: @Model.Email<br/>
<br/>

Employer Satisfaction: @{
    if (Model.EmployerSatisfaction > 0)
    {
        @Model.EmployerSatisfaction
    }
    else
    {
        <p>No data available</p>
    }
}<br/>

    Learner Satisfaction:
    
@{
    if (Model.LearnerSatisfaction > 0)
    {
        @Model.LearnerSatisfaction
    }
    else
    {
        <p>No data available</p>
    }
}
    <br/>

    @{
         if (Model.EmployerSatisfaction >0 || Model.LearnerSatisfaction > 0)
         {
             <a href="https://www.gov.uk/government/statistical-data-sets/fe-choices-performance-indicators" target="_blank">Skills Funding Agency FE Choices</a>
             <br/>
         }
     }
    <br/>
    Disclaimer: Skills Funding Agency cannot guarantee the accuracy of course information on this site and makes 
            no representations about the quality of any courses which appear on the site. Skills Funding Agency 
            is not liable for any losses suffered as a result of any party relying on the course information 
            provided.
    
        
</div>
</div>












@helper GetStandardPropertyHtml(string title, string id, string item, bool hideIfEmpty = false)
{
if (!string.IsNullOrEmpty(item) || !hideIfEmpty)
{
        <dt class="@id-title">@title</dt>
        <dd id="@id" class="@id">@Html.Raw(item)</dd>
}
}

@helper GetEmailPropertyHtml(string title, string id, string item, bool hideIfEmpty = false)
{
if (!string.IsNullOrEmpty(item) || !hideIfEmpty)
{
        <dt class="email-title">@title</dt>
        <dd id="@id" class="email"><a href="mailto:@Html.Raw(item)">@Html.Raw(item)</a></dd>
}
}

@helper GetStandardPropertyAsLinkHtml(string title, string cssClass, string classTitle, string classIdentifier, string url, string urlTitle = "")
{
if (!string.IsNullOrEmpty(url))
{
    var linkProtocol = url.StartsWith("http") ? string.Empty : "http://";
        <dt class="@classTitle">@title</dt>
        <dd>
            <a href="@linkProtocol@url" rel="external" target="_blank" class="@cssClass @classIdentifier">
                @if (string.IsNullOrEmpty(urlTitle))
                {
                    @Html.Raw(url)
                }
                else
                {
                    @Html.Raw(urlTitle)
                }
            </a>
        </dd>
}
}