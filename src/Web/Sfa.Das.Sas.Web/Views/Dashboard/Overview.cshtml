@using Sfa.Das.Sas.Web.Extensions
@using Sfa.Das.Sas.Web.ViewModels
@model DashboardViewModel

@{
    ViewBag.Title = "My Dashboard";
}

<main id="content" class="standard-detail">
    <h1 class="heading-xlarge">
        @Model.Title
    </h1>

    @DisplayEmptyShortlistMessage(Model)

    <h2 class="heading-medium">
        Apprenticeship training
    </h2>
    @if (!Model.Apprenticeships.IsNullOrEmpty())
    {
        @GetShortlistItem(Model.Apprenticeships.OrderBy(m => m.Title));
    }

</main>

@helper DisplayEmptyShortlistMessage(DashboardViewModel viewModel)
{
    var emptyMessageClasses = viewModel.Apprenticeships.IsNullOrEmpty() ? string.Empty : "hidden";

    <p id="empty-shortlist-message" class="notice @emptyMessageClasses">
        You have no apprenticeship training shortlisted.&nbsp;
        @Html.ActionLink("Search for apprenticeship training", "Search", "Apprenticeship")
    </p>
}

@helper GetLink(IShortlistApprenticeshipViewModel model)
{
    var method = model is ShortlistStandardViewModel ? "Standard" : "Framework";
    var apprenticeshipName = $"{model.Title}, level {model.Level}";
    @Html.ActionLink(apprenticeshipName, method, "Apprenticeship", new { id = model.Id }, null)
}

@helper GetDeleteLink(IShortlistApprenticeshipViewModel model)
{
    var method = model is ShortlistStandardViewModel ? "RemoveStandard" : "RemoveFramework";
    @Html.ActionLink("Delete", method, "ShortList", new { id = model.Id }, new { @class = "delete-link", data_apprenticeship = model.Id, data_apprenticeship_type = method, rel = "nofollow" })
}

@helper GetShortlistItem(IEnumerable<IShortlistApprenticeshipViewModel> apprenticeships)
{
    <ol class="apprenticeship-items">
        @foreach (var apprenticeship in apprenticeships)
        {
            <li class="apprenticeship-item">
                <span class="apprenticeship-title">
                    @GetLink(apprenticeship)
                </span>
                <span class="action">
                    @GetDeleteLink(apprenticeship)
                </span>
                @if (apprenticeship.Providers.Any())
                {   
                    <div class="providers">

                        <h3 class="heading-small">
                            Training providers
                        </h3>
                        @foreach (var provider in apprenticeship.Providers.OrderBy(m => m.Name))
                        {
                            <ol>
                                <li class="provider-item">
                                    <span class="provider-title">
                                        @Html.RenderAIfExists(provider.Name, provider.Url, "")
                                    </span>
                                    <span class="action">
                                        @Html.ActionLink("Delete", "RemoveStandardProvider", "ShortList", new { apprenticeshipId = apprenticeship.Id, providerId = provider.Id, locationId = provider.LocationId }, new { @class = "provider-delete-link", data_provider = provider.Id, data_apprenticeship = apprenticeship.Id, data_location = provider.LocationId, rel = "nofollow" })
                                        @* Add to support frameorks *@
                                    </span>
                                </li>
                            </ol>
                        }
                    </div>
                }
            </li>
        }
    </ol>
}
