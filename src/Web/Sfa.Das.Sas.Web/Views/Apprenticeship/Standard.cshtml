@using System.Globalization
@using Sfa.Das.Sas.Resources
@using Sfa.Das.Sas.Web.Extensions
@model Sfa.Das.Sas.Web.ViewModels.StandardViewModel
@{
    ViewBag.Title = Model.Title + " - Apprenticeship Standard";
    ViewBag.Description = Model.OverviewOfRole;
}
<main id="content" class="standard-detail">
    <div class="grid-row">
        <div class="column-two-thirds">
            <div>
                <h1 class="heading-xlarge">
                    @Model.Title
                </h1>
                <p class="lede">@Model.OverviewOfRole</p>
            </div>
        </div>
        <div class="column-third">
            <div class="related-container">
                <aside class="hidden-for-mobile-tablet">
                    <a class="button ui-find-training-providers" rel="nofollow" id="ga-find-provider-top" href="@Url.Action("SearchForStandardProviders", "Apprenticeship", new { standardId = Model.StandardId, keywords = Model.SearchTerm })">
                        Find training providers
                    </a>
                </aside>
            </div>
        </div>
    </div>
    <section>
        <header>
            <h2 class="heading-large">
                Summary of this apprenticeship standard
            </h2>
        </header>
        <dl class="data-list">
            @GetStandardProperty("Level", "level", $"{@Model.Level} (equivalent to {EquivalenceLevelService.GetApprenticeshipLevel(Model.Level.ToString())})")
            @GetDurationProperty("Typical length", "length", Model.Duration.ToString())
            @GetFundingBandProperty(Model.MaxFunding)
            @GetStandardProperty("Entry requirements", "entry-requirements", Model.EntryRequirements)
            @GetStandardProperty("What apprentices will learn", "will-learn", Model.WhatApprenticesWillLearn)
            @GetStandardProperty("Qualifications", "qualifications", Model.Qualifications)
            @GetStandardProperty("Professional registration", "professional-registration", Model.ProfessionalRegistration, true)
            <dt>Documents</dt>
            <dd>
                <div class="panel-indent panel-indent-info document-list">
                    <ul>
                        @GetDocumentItem(Model.StandardPdf, "Standard")
                        @GetDocumentItem(Model.AssessmentPlanPdf, "Assessment Plan")
                    </ul>
                </div>
            </dd>
      
       
        </dl>
        <div class="grid-row"> 
            <div class="column-full">
                <p class="collapsible">End Point Assessment </p>
            @if (Model.AssessmentOrganisations.Any())
            {
                <details>
               
                    <summary><span class="summary" style="text-decoration:none">View a list of end point assessment organisations for this standard</span></summary>

                    <table class="responsive">
                        <thead>
                        <tr>
                            <th scope="col">Organisation</th>
                            <th scope="col">Phone Number</th>
                            <th scope="col">Email</th>
                        </tr>
                        </thead>
                        <tbody>
                        @foreach (var organisation in Model.AssessmentOrganisations)
                        {
                            <tr>
                                <td id="organisation-name" data-label="organisation">
                                    @if (string.IsNullOrEmpty(organisation.Website))
                                    {
                                        @organisation.Name
                                    }
                                    else
                                    {
                                        <a href="@organisation.Website" target="_blank">@organisation.Name</a>
                                    }
                                </td>
                                <td class="" data-label="phone-number">@organisation.Phone</td>
                                <td class="" data-label="email"><a href="mailto:@organisation.Email" target="_blank">@organisation.Email</a></td>
                            </tr>
                        }
                        </tbody>
                    </table>

                </details>
            } 
            else
            {
                <p class="text-copy" id="no-assessment-organisations">There are no end point assessment organisations for this standard yet. There is a monthly application process for organisations interested in delivering end-point assessment. New organisations are added regularly.<br/><br/>
                    If you have an urgent need to select an assessment organisation for this standard, please email <a href="mailto:apprentice.assessment@education.gov.uk" target="_blank">apprentice.assessment@education.gov.uk</a> with details.
                </p>
            }
            </div>
        </div>
        <div id="bottom-actions">
            <a class="button btn-find-trng-prov" rel="nofollow" id="ga-find-provider-bottom" href="@Url.Action("SearchForStandardProviders", "Apprenticeship", new { standardId = Model.StandardId, keywords = Model.SearchTerm })">
                Find training providers
            </a>
        </div>
    </section>
</main>
@helper GetStandardProperty(string title, string id, string item, bool hideIfEmpty = false)
{
    if (!string.IsNullOrEmpty(item) || !hideIfEmpty)
    {
        <dt>@title</dt>
        <dd id="@id">@Html.MarkdownToHtml(item)@if (item == null){ @Html.Raw("&nbsp;") }</dd>
    }
}

@helper GetDurationProperty(string title, string id, string item, bool hideIfEmpty = false)
{
    if (!string.IsNullOrEmpty(item) || !hideIfEmpty)
    {
        <dt>@title</dt>
        <dd id="@id">@item months</dd>
    }
}

@helper GetFundingBandProperty(int value)
{
    var fundingCapFormatted = value.ToString("C0", new CultureInfo("en-GB"));

    <dt>Current funding band</dt>
    <dd id="funding-cap">
        Up to @fundingCapFormatted per apprentice.<br />
        <a href="https://www.gov.uk/guidance/employing-an-apprentice-technical-guide-for-employers#funding-for-your-apprenticeship" target="_blank">More information about funding</a>
    </dd>
}

@helper GetDocumentItem(string pdfUrl, string title)
{
    if (!string.IsNullOrEmpty(title))
    {
        <li>
            <a href="@pdfUrl" target="_blank">
                @title
            </a>
        </li>
    }
}