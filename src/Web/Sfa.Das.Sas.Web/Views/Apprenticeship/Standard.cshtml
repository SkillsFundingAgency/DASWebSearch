@using System.Globalization
@using Sfa.Das.Sas.Resources
@using Sfa.Das.Sas.Web.Extensions
@model Sfa.Das.Sas.Web.ViewModels.StandardViewModel
@{
    ViewBag.Title = Model.Title + " - Apprenticeship Standard";
    ViewBag.Description = Model.OverviewOfRole;
}
<main id="content" class="standard-detail">
    <div class="grid-row">
        <div class="column-two-thirds">
            <div>
                <h1 class="heading-xlarge">
                    @Model.Title
                </h1>
                <p class="lede">@Model.OverviewOfRole</p>
            </div>
        </div>
        <div class="column-third">
            <div class="related-container">
                <aside class="hidden-for-mobile-tablet">
                    <a class="button ui-find-training-providers" rel="nofollow" id="ga-find-provider-top" href="@Url.Action("SearchForStandardProviders", "Apprenticeship", new { standardId = Model.StandardId, keywords = Model.SearchTerm })">
                        Find training providers
                    </a>
                </aside>
            </div>
        </div>
    </div>
    <section>
        <header>
            <h2 class="heading-large">
                Summary of this apprenticeship standard
            </h2>
        </header>
        <dl class="data-list">
            @GetStandardProperty("Level", "level", $"{@Model.Level} (equivalent to {EquivalenceLevelService.GetApprenticeshipLevel(Model.Level.ToString())})")
            @GetFundingBandProperty(Model.MaxFunding)
            @GetStandardProperty("Typical length", "length", @Model.TypicalLengthMessage)
            @GetStandardProperty("Entry requirements", "entry-requirements", Model.EntryRequirements)
            @GetStandardProperty("What apprentices will learn", "will-learn", Model.WhatApprenticesWillLearn)
            @GetStandardProperty("Qualifications", "qualifications", Model.Qualifications)
            @GetStandardProperty("Professional registration", "professional-registration", Model.ProfessionalRegistration, true)
            <dt>Documents</dt>
            <dd>
                <div class="panel-indent panel-indent-info document-list">
                    <ul>
                        @GetDocumentItem(Model.StandardPdf, "Standard")
                        @GetDocumentItem(Model.AssessmentPlanPdf, "Assessment Plan")
                    </ul>
                </div>
            </dd>
        </dl>
        <div id="bottom-actions">
            <a class="button ui-find-training-providers" rel="nofollow" id="ga-find-provider-bottom" href="@Url.Action("SearchForStandardProviders", "Apprenticeship", new { standardId = Model.StandardId, keywords = Model.SearchTerm })">
                Find training providers
            </a>
        </div>
    </section>
</main>
@helper GetStandardProperty(string title, string id, string item, bool hideIfEmpty = false)
{
if (!string.IsNullOrEmpty(item) || !hideIfEmpty)
{
    <dt>@title</dt>
    <dd id="@id">@Html.MarkdownToHtml(item)</dd>
}
}

@helper GetFundingBandProperty(int value)
{
var fundingCapFormatted = value.ToString("C0", CultureInfo.CurrentCulture);

    <dt>Funding cap<br />(from 1 May 2017)</dt>
    <dd id="funding-cap">
        Up to @fundingCapFormatted per apprentice.<br />
        <a href="https://www.gov.uk/government/publications/apprenticeship-levy-how-it-will-work/apprenticeship-levy-how-it-will-work" target="_blank">More information about funding</a>
    </dd>
}

@helper GetDocumentItem(string pdfUrl, string title)
{
if (!string.IsNullOrEmpty(title))
{
        <li>
            <a href="@pdfUrl" target="_blank">
                @title
            </a>
        </li>
}
}