@using System.Globalization
@using Sfa.Das.Sas.Resources
@using Sfa.Das.Sas.Web.Extensions
@model Sfa.Das.Sas.Web.ViewModels.FrameworkViewModel

@{
    ViewBag.Title = @Model.Title + " - Apprenticeship Framework";
    ViewBag.Description = "The Find Apprenticeship Training service is for employers in England who want to find training courses for their apprentices and search for training providers.";
}

<main id="content">
    <div class="grid-row">
        <div class="column-two-thirds">
            <h1 class="heading-xlarge">
                @Model.Title
            </h1>
            <p>
                This information is taken from an apprenticeship framework. It sets out what qualifications the apprentice can achieve.
            </p>
            @if (Model.ExpiryDateString != null)
            {

                <div class="notice">
                    <i class="icon icon-important">
                        <span class="visuallyhidden">Warning</span>
                    </i>
                    <strong class="bold-small">
                        This apprenticeship is closed to new starters from @Model.ExpiryDateString
                    </strong>
                </div>

            }
        </div>

        <div class="column-third">
            <div class="related-container">
                <aside class="hidden-for-mobile-tablet">

                    <a class="button ui-find-training-providers" rel="nofollow" href="@Url.Action("SearchForFrameworkProviders", "Apprenticeship", new {frameworkId = Model.FrameworkId, keywords = Model.SearchTerm})">
                        Find training providers
                    </a>
                </aside>
            </div>

        </div>
    </div>

    <section>
        <header>
            <h2 class="heading-large">
                Summary of this apprenticeship framework
            </h2>
        </header>

        <dl class="data-list">
            @if (!string.IsNullOrEmpty(Model.FrameworkOverview))
            {
                <dt class="overviewTitle">Overview of role</dt>
                <dd class="overviewText">@Model.FrameworkOverview </dd>
            }
            @GetStandardProperty("Level", "level", $"{Model.Level} (equivalent to {EquivalenceLevelService.GetApprenticeshipLevel(Model.Level.ToString())})")
            @GetFundingBandProperty(Model.MaxFunding)
            @GetStandardProperty("Typical length", "length", Model.TypicalLengthMessage)
            <dt>Entry requirements</dt>
            <dd class="entry-requirements">
                @if (!string.IsNullOrEmpty(Model.EntryRequirements))
                {
                    <div>@Model.EntryRequirements</div>
                }
                <div>Your chosen training provider can advise you about entry requirements for apprentices.</div>
            </dd>

            <dt>Suitable roles for apprentices</dt>
            <dd class="job-roles">
                @if (Model.JobRoles != null && Model.JobRoles.Any())
                {
                    <ul>
                        @foreach (var jobRole in Model.JobRoles.Take(5))
                        {
                            <li>@jobRole</li>
                        }
                        @if (Model.JobRoles.Count() > 5)
                        {
                            foreach (var jobRole in Model.JobRoles.Skip(5))
                            {
                                <li class="default-hidden">@jobRole</li>
                            }
                            <a href="#" class="showmore hidden">Show more</a>
                        }
                    </ul>
                }

                <div>
                    Your chosen training provider can advise you about the kinds of skills apprentices will learn.
                </div>
            </dd>
            <dt>Qualifications</dt>
            <dd>
                <div class="qualifications">
                    @if (Model.CompetencyQualification != null && Model.CompetencyQualification.Any())
                    {
                        <div class="competencyQualifications">
                            <p>Apprentices will achieve a practical (or 'competence') qualification:</p>
                            <ul>
                                @foreach (var qualification in Model.CompetencyQualification.Take(3))
                                {
                                    <li>@qualification</li>
                                }

                                @if (Model.CompetencyQualification.Count() > 3)
                                {
                                    foreach (var qualification in Model.CompetencyQualification.Skip(3))
                                    {
                                        <li class="default-hidden">@qualification</li>
                                    }
                                    <a href="#" class="showmore hidden">Show more</a>
                                }
                            </ul>
                        </div>
                    }

                    @if (Model.KnowledgeQualification != null && Model.KnowledgeQualification.Any())
                    {
                        <div class="knowledgeQualifications">
                            <p>Apprentices will also achieve a theory-based (or 'knowledge') qualification:</p>
                            <ul>
                                @foreach (var qualification in Model.KnowledgeQualification.Take(3))
                                {
                                    <li>@qualification</li>
                                }

                                @if (Model.KnowledgeQualification.Count() > 3)
                                {
                                    foreach (var qualification in Model.KnowledgeQualification.Skip(3))
                                    {
                                        <li class="default-hidden">@qualification</li>
                                    }
                                    <a href="#" class="showmore hidden">Show more</a>
                                }
                            </ul>
                        </div>
                    }

                    @if (Model.CombinedQualificiation != null && Model.CombinedQualificiation.Any())
                    {
                        <div class="combinedQualification">
                            <p>Apprentices will achieve a practical and theory-based (or 'combined') qualification:</p>
                            <ul>
                                @foreach (var qualification in Model.CombinedQualificiation.Take(3))
                                {
                                    <li>@qualification</li>
                                }

                                @if (Model.CombinedQualificiation.Count() > 3)
                                {
                                    foreach (var qualification in Model.CombinedQualificiation.Skip(3))
                                    {
                                        <li class="default-hidden">@qualification</li>
                                    }
                                    <a href="#" class="showmore hidden">Show more</a>
                                }
                            </ul>
                        </div>
                    }
                </div>

                @if (Model.CompletionQualifications != string.Empty)
                {
                    <p class="completionQualifications">@Model.CompletionQualifications</p>
                }
                <p class="qualificationsStatic">Your chosen training provider can advise you about the qualifications open to apprentices as they can change depending on individual and other circumstances.</p>
            </dd>

            <dt>Professional registration</dt>
            <dd>@Model.ProfessionalRegistration</dd>
        </dl>

        <div id="bottom-actions">
            <a class="button ui-find-training-providers" rel="nofollow" id="ga-find-provider-bottom" href="@Url.Action("SearchForFrameworkProviders", "Apprenticeship", new {frameworkId = Model.FrameworkId, keywords = Model.SearchTerm})">
                Find training providers
            </a>
        </div>
    </section>
</main>

@helper GetStandardProperty(string title, string id, string item, bool hideIfEmpty = false)
{
if (!string.IsNullOrEmpty(item) || !hideIfEmpty)
{
        <dt>@title</dt>
        <dd id="@id">@Html.MarkdownToHtml(item)</dd>
}
}

@helper GetFundingBandProperty(int value)
{
var fundingCapFormatted = value.ToString("C0", CultureInfo.CurrentCulture);

    <dt>Funding cap<br />(from 1 May 2017)</dt>
    <dd id="funding-cap">
        Up to @fundingCapFormatted per apprentice.<br />
        <a href="https://www.gov.uk/government/publications/apprenticeship-levy-how-it-will-work/apprenticeship-levy-how-it-will-work#buying-apprenticeship-training-and-assessment" target="_blank">More information about funding</a>
    </dd>
}