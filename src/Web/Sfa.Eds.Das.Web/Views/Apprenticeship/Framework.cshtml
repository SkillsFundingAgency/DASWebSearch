@using Resources = Sfa.Eds.Das.Resources.EquivalenceLevels
@using Sfa.Eds.Das.Web.Extensions
@model Sfa.Eds.Das.Web.ViewModels.FrameworkViewModel

@{
    ViewBag.Title = "Framework - " + @Model.Title;
}

<main id="content">

    <p class="small-btm-margin">
        @Html.RenderAIfExists(@Model.SearchResultLink?.Title, @Model.SearchResultLink?.Url, "link-back")
    </p>

    <div class="grid-row">

        <div class="column-two-thirds">
            <header class="hgroup">
                <h1 class="heading-xlarge">
                    @Model.FrameworkName
                </h1>
            </header>

            <p>Contains an apprenticeship training programme for @Model.PathwayName, level @GetFrameworkLevel(@Model.Level.ToString())</p>

            <h3 class="heading-medium">
                Contact a provider
            </h3>
            <p>
                If you're an employer, you can speak about this framework to a training provider who can help you apply the framework to an apprenticeship in your organisation.
            </p>

        </div>

        <div class="column-third">
            @using (Html.BeginForm("FrameworkResults", "Provider", FormMethod.Get, new { @class = "search-box" }))
            {
                <div class="related-container">
                    <aside class="related">

                        <h2 class="heading-medium">Find training providers</h2>
                        <form action="/g-cloud/search" method="get" class="search-box">
                            <div class="form-group @(@Model.HasError ? " error" : "")">
                                <label class="form-label" for="postcode">
                                    Enter postcode@* or partial postcode *@
                                    <p>
                                        @{
                                            Html.RenderPartial("_BlankFieldErrorMessage");
                                        }
                                    </p>
                                </label>
                                <input type="hidden" id="apprenticeshipid" name="apprenticeshipid" class="text-box form-control" value="@Model.FrameworkId">
                                <input type="search" id="postcode" name="PostCode" class="text-box form-control" maxlength="200" placeholder="">
                            </div>
                            <input class="button margin-top-x2" id="submit-postcode" type="submit" value="Search" />
                        </form>

                    </aside>
                </div>
             }

            </div>
        </div>
</main>

@helper GetFrameworkLevel(string item)
{
    if (!string.IsNullOrEmpty(item))
    {
        var equivalence = string.Empty;
        switch (int.Parse(@item))
        {
            case 1:
                equivalence = @Resources.FirstLevel;
                break;
            case 2:
                equivalence = @Resources.SecondLevel;
                break;
            case 3:
                equivalence = @Resources.ThirdLevel;
                break;
            case 4:
                equivalence = @Resources.FourthLevel;
                break;
            case 5:
                equivalence = @Resources.FifthLevel;
                break;
            case 6:
                equivalence = @Resources.SixthLevel;
                break;
            case 7:
                equivalence = @Resources.SeventhLevel;
                break;
            case 8:
                equivalence = @Resources.EighthLevel;
                break;
            default:
                break;

        }
            <span>@item (equivalent to @equivalence)</span>
    }
}